- Clean up walks source code cause it is soooooo ugly
- Skip n for iterators
- Name coherency between FSG/FullStreamGraph ect...
- Name guard for different iterators of the different stream types
- Check for data coherence in the input file
- Automate tests and formatting using GitHub actions
- Choose between calling nodes temporal nodes or nodes
- Rename test files (?)
- Benchmarking framework
- Change mallocs to the safe macro MALLOC defined in utils.h
- Add a config file for changing the default values and types used (for example slices, to fine tune the memory usage)
- Make sure every function and struct is prefixed with `SGA` to avoid name collisions
- Make sure the .h files are well guarded
- Make sure the .h files are included in the .c files
- Document the code
- Find a name for |V|
- Debug for use of uninitialised table of events
- Verify catch implementations for all functions
- const qualifier when needed
- Version control for formats
- Add format B where it's node by node instead of event by event
- Crashes when node ids not sorted in the input file

- Read all the TODOs in the code

Metrics (V for implemeted, X for not implemented):
- Coverage V
- Contribution of a node V
- Number of nodes V
- Contribution of a link V
- Number of links V
- Node contribution at a time t V
- Link contribution at a time t V
- Node duration V
- Link duration V
- Uniformity V
- Uniformity of a pair of nodes V
- Compactness X
- Density V
- Density of a link V
- Density of a node V
- Density of a time instant V
